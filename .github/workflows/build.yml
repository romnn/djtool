name: build

on: [push, pull_request]

jobs:
  build-macos:
    runs-on: macos-latest
    name: build ${{ matrix.bin }} (${{ matrix.target.arch }})
    strategy: 
      fail-fast: false
      matrix:
        bin:
          - djtool
        target:
          - arch: x86_64-apple-darwin
          - arch: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target.arch }}

      - name: Install dependencies
        run: >-
          brew install
          llvm
          protobuf
          yasm

      - name: Set up cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build ${{ matrix.bin }} (${{ matrix.target.arch }})
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: >-
            --bin ${{ matrix.bin }}
            --target ${{ matrix.target.arch }}
  
  build-linux:
    runs-on: ubuntu-latest
    name: build ${{ matrix.bin }} (linux ${{ matrix.target.arch }})
    strategy: 
      fail-fast: false
      matrix:
        bin:
          - djtool
        target:
          # linux aarch64 
          - arch: aarch64-unknown-linux-gnu
          - arch: aarch64-unknown-linux-musl
          # linux armv7
          - arch: armv7-unknown-linux-musleabihf
          # linux i686
          - arch: i686-unknown-linux-gnu
          - arch: i686-unknown-linux-musl
          # linux arm
          - arch: arm-unknown-linux-gnueabi
          - arch: arm-unknown-linux-gnueabihf
          # linux x86
          - arch: x86_64-unknown-linux-gnu
          - arch: x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target.arch }}

      - name: Install dependencies
        run: >-
          sudo apt-get install -y
          llvm-dev libclang-dev clang
          build-essential
          curl
          wget
          webkit2gtk-4.0
          libssl-dev
          libgtk-3-dev
          libayatana-appindicator3-dev
          librsvg2-dev
          libsoup2.4
          libasound2-dev
          yasm
          protobuf-compiler

      - name: Set up cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build ${{ matrix.bin }} (${{ matrix.target.arch }})
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: >-
            --bin ${{ matrix.bin }}
            --target ${{ matrix.target.arch }}

  build-windows:
    runs-on: windows-latest
    name: build ${{ matrix.bin }} (${{ matrix.target.arch }})
    strategy: 
      fail-fast: false
      matrix:
        bin:
          - djtool
        target:
          - arch: x86_64-pc-windows-gnu
          - arch: x86_64-pc-windows-msvc
          - arch: i686-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target.arch }}

      - name: Set up cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build ${{ matrix.bin }} (${{ matrix.target.arch }})
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: >-
            --bin ${{ matrix.bin }}
            --target ${{ matrix.target.arch }}
